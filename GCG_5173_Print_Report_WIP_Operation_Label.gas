Program.Sub.ScreenSU.Start
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start

Variable.Global.sJob.Declare(String)
Variable.Global.sSuffix.Declare(String)
Variable.Global.sSeq.Declare(String)
Variable.Global.sQty.Declare(String,".000000")
Variable.Global.iBIRunID.Declare(Long,-1)
Variable.Global.iLogID.Declare(Long,-1)
Variable.Global.sSQL.Declare(String)
Program.Sub.Preflight.End

Program.Sub.Main.Start
'BN, Aug 15, 2018
'Customer: Caragh Precision
'Project: 5173
'Quote: 10501-0
'This project is a modification of project 3144 in that:
'A prompt for the number of labels that print when using the script 1 button on the gui is added(Hook 15850).
'Script 1 button is now named "Part Label" will print labels to a number of copies specified, no matter if Goods or Scraps number are entered
'Process button when clicked, will only print label for Scrap (hook 15881)

F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sComments.Declare(String)
V.Local.iRows.Declare(Long)
V.Local.iC.Declare(Long)
V.Local.sRet.Declare(String)
'BN, Aug 15, 2018
v.Local.iCopyNum.Declare(long,1)
V.global.sQty.Set(".000000")

F.ODBC.Connection!Con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)

'if called from update job populate hook
F.Intrinsic.Control.If(V.Caller.Hook,=,"15840")
	Variable.passed.000048.set("Part Label")
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndIf

'verify trmnl is on GCG_3144_MVE_TKT_SU to be able to print label/comments
F.Intrinsic.String.Build("SELECT * FROM GCG_3144_MVE_TKT_SU WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstX",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstX.EOF,=,True)
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstX.Close

F.Intrinsic.String.Build("DELETE FROM GCG_3144_WIP_OP_LABL WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
F.ODBC.Connection!Con.Execute(V.Global.sSQL)

'if called from the script1 button on GUI update job
F.Intrinsic.Control.If(V.Caller.Hook,=,"15850")

	'BN, Aug 15, 2018
	F.Intrinsic.UI.InputBox ("Number of copies to print","Number of copies","1",v.Local.iCopyNum)
	V.Global.sJob.Set(V.passed.009990)
	V.Global.sSuffix.Set(V.Passed.009991)
	V.Global.sSeq.Set(V.Passed.009992)
	V.Global.sQty.Set(V.Passed.000001)
	F.Intrinsic.String.Replace(V.Passed.Comments,"<CRLF>"," ",V.Local.sComments)
	'BN, Aug 15, 2018: add parameter CopyNum
	F.Intrinsic.Control.CallSub(Printticket,"CopyNum",v.Local.iCopyNum,"sScrapQty",V.Passed.000002,"sEmployee",V.Passed.009994,"sWC",V.Passed.000010,"sQualitynbr",V.Passed.010002,"sCloseflag",V.Passed.000003,"sComments","","sScrapRef",v.Passed.SCRAP-REF)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Caller.Hook,=,"15881")
'if called from the Process button on update job (new pre-process hook for single and multiple)
	V.global.sjob.Set(V.passed.009990)
	V.global.ssuffix.Set(V.Passed.009991)
	V.global.sseq.Set(V.Passed.009992)
	V.global.sQty.Set(V.Passed.000001)
	F.Intrinsic.String.Replace(V.Passed.Comments,"<CRLF>"," ",V.Local.sComments)
	F.Intrinsic.Control.CallSub(Printticket,"sScrapQty",V.Passed.000002,"sEmployee",V.Passed.009994,"sWC",V.Passed.000010,"sQualitynbr",V.Passed.010002,"sCloseflag",V.Passed.000003,"sComments",V.Local.sComments,"sScrapRef",V.Passed.SCRAP-REF)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(Unload)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3144_Print_Report_WIP_Operation_Label.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.Main.End

Program.Sub.Unload.Start
F.Intrinsic.Control.SetErrorHandler("Unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

F.ODBC.Connection!Con.Close
F.Intrinsic.Control.End

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3144_Print_Report_WIP_Operation_Label.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

Function.Intrinsic.Control.EndIf


Program.Sub.Unload.End

Program.Sub.PrintTicket.Start
F.Intrinsic.Control.SetErrorHandler("PrintTicket_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.sScrapQty.Declare(String)
V.Local.sCurPart.Declare(String)
V.Local.sCurDescr.Declare(String)
V.Local.sQtyCompleted.Declare(Float)
V.Local.sNextSeq.Declare(String)
V.Local.sNextPart.Declare(String)
V.Local.sNextDescr.Declare(String)
V.Local.sLMO.Declare(String)
V.Local.sNext_DateStart.Declare(String)
V.Local.sNext_DateDue.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sCust.Declare(String)
V.Local.sWOPriority.Declare(String)
V.Local.sPartDescr.Declare(String)
V.Local.sWOQty.Declare(String)
V.Local.sWOCustQty.Declare(String)
V.Local.sWODateDue.Declare(String)
V.Local.sName.Declare(String)
V.Local.sEmployee.Declare(String)
V.Local.sScrapCode.Declare(String)
V.Local.sScrapDescription.Declare(String)
V.Local.sParentJob.Declare(String)
V.Local.sParentSuffix.Declare(String)
V.Local.sParentPart.Declare(String)
V.Local.sParentDescr.Declare(String)
V.Local.sTopParentJob.Declare(String)
V.Local.sTopParentSuffix.Declare(String)
V.Local.sTopParentPart.Declare(String)
V.Local.sTopParentDescr.Declare(String)
V.Local.sParentInitWC.Declare(String)
V.Local.sWC.Declare(String)
V.Local.sQualitynbr.Declare(String)
V.Local.sCloseflag.Declare(String)
V.Local.sComments.Declare(String)
V.Local.sRptLoc.Declare(String)
V.Local.iRptID.Declare(Long)
V.Local.sTPrinter.Declare(String)
V.Local.sScrapPrinter.Declare(String)
V.Local.sScrapFlag.Declare(String)
V.Local.sParams.Declare(String)
V.Local.sValues.Declare(String)
V.Local.sScrapRef.Declare(String)
V.Local.dNext_DateStart.Declare(Date)
V.Local.dNext_DateDue.Declare(Date)
v.Local.iRet.Declare(Long)
v.Local.iRunCopy.Declare
V.Local.sScrapQty.Set(V.Args.sScrapQty)
V.Local.sEmployee.Set(V.Args.sEmployee)
V.Local.sWC.Set(V.Args.sWC)
V.Local.sQualitynbr.Set(V.Args.sQualitynbr)
V.Local.sCloseflag.Set(V.Args.sCloseflag)
V.Local.sComments.Set(V.Args.sComments)
V.Local.sScrapRef.Set(V.Args.sScrapRef)


F.Intrinsic.String.Build("SELECT PART, DESCRIPTION, UNITS_COMPLETE FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ = '{2}' ",V.Global.sjob,V.Global.sSuffix,V.Global.sSeq,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.Global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sCurPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
	V.Local.sCurDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!DESCRIPTION)
	V.Local.sQtyCompleted.Set(V.ODBC.Con!rstSel.FieldValTrim!UNITS_COMPLETE)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT SEQ, PART, DESCRIPTION, LMO, DATE_START, DATE_DUE, UNITS_COMPLETE FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQ > '{2}' AND LMO <> 'C' AND LMO <> 'M' AND TASK_SEQ <> 'T' ORDER BY SEQ ",V.Global.sJob,V.Global.sSuffix,V.Global.sSeq,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.Global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sNextSeq.Set(V.ODBC.Con!rstSel.FieldValTrim!SEQ)
	V.Local.sNextPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
	V.Local.sNextDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!DESCRIPTION)
	V.Local.sLMO.Set(V.ODBC.Con!rstSel.FieldValTrim!LMO)
	V.Local.dNext_DateStart.Set(V.ODBC.Con!rstSel.FieldVal!DATE_START)
	V.Local.dNext_DateDue.Set(V.ODBC.Con!rstSel.FieldVal!DATE_DUE)
F.Intrinsic.Control.Else
	F.Intrinsic.Date.ConvertDString("01/01/1900","mm/dd/yyyy",V.Local.dNext_DateStart)
	F.Intrinsic.Date.ConvertDString("01/01/1900","mm/dd/yyyy",V.Local.dNext_DateDue)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT PART, CUSTOMER, PRIORITY, PART_DESCRIPTION,QTY_ORDER, QTY_CUSTOMER, DATE_DUE FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '{1}' ",V.Global.sJob,V.Global.sSuffix,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sPart.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
	V.Local.sCust.Set(V.ODBC.Con!rstSel.FieldValTrim!CUSTOMER)
	V.Local.sWOPriority.Set(V.ODBC.Con!rstSel.FieldValTrim!PRIORITY)
	V.Local.sPartDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!PART_DESCRIPTION)
	V.Local.sWOQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY_ORDER)
	V.Local.sWOCustQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY_CUSTOMER)
	V.Local.sWODateDue.Set(V.ODBC.Con!rstSel.FieldValTrim!DATE_DUE)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT NAME_CUSTOMER FROM V_CUSTOMER_MASTER WHERE CUSTOMER = '{0}' ",V.Local.sCust,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sName.Set(V.ODBC.Con!rstSel.FieldValTrim!NAME_CUSTOMER)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

'Why we have to check Scrap_reason from V_Job_In_Process with Job, Suffix, Sequence, Employee_name
F.Intrinsic.String.Build("SELECT SCRAP_REASON FROM V_JOBS_IN_PROCESS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND SEQUENCE = '{2}' AND EMPLOYEE_NAME = '{3}' ORDER BY SEQUENCE_KEY DESC ",V.Global.sJob,V.Global.sSuffix,V.Global.sSeq,V.Local.sEmployee,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sScrapCode.Set(V.ODBC.Con!rstSel.FieldValTrim!SCRAP_REASON)
	F.Intrinsic.String.Build("SELECT SCRAP_CODE_DESC FROM V_RJCT_SCRP_CODES WHERE SCRAP_CODE = '{0}' ",V.Local.sScrapCode,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
		V.Local.sScrapDescription.Set(V.ODBC.Con!rstSelA.FieldValTrim!SCRAP_CODE_DESC)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSelA.Close
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT PARENT_WO, PARENT_SUFFIX_PARENT FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '{1}' ",V.Global.sJob,V.Global.sSuffix,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sParentJob.Set(V.ODBC.Con!rstSel.FieldValTrim!Parent_WO)
	V.Local.sParentSuffix.Set(V.ODBC.Con!rstSel.FieldValTrim!Parent_Suffix_Parent)
	F.Intrinsic.String.Build("SELECT PART, PART_DESCRIPTION FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '{1}' ",V.Local.sParentJob,V.Local.sParentSuffix,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSQL)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
		V.Local.sParentPart.Set(V.ODBC.Con!rstSelA.FieldValTrim!Part)
		V.Local.sParentDescr.Set(V.ODBC.Con!rstSelA.FieldValTrim!Part_Description)
	F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstSelA.Close
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT JOB, SUFFIX, PART, PART_DESCRIPTION FROM V_JOB_HEADER WHERE JOB = '{0}' AND SUFFIX = '000' ",V.Global.sJob,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sTopParentJob.Set(V.ODBC.Con!rstSel.FieldValTrim!Job)
	V.Local.sTopParentSuffix.Set(V.ODBC.Con!rstSel.FieldValTrim!Suffix)
	V.Local.sTopParentPart.Set(V.ODBC.Con!rstSel.FieldValTrim!Part)
	V.Local.sTopParentDescr.Set(V.ODBC.Con!rstSel.FieldValTrim!Part_Description)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT PART FROM V_JOB_OPERATIONS WHERE JOB = '{0}' AND SUFFIX = '{1}' AND LMO = 'L' ORDER BY SEQ ",V.Local.sParentJob,V.Local.sParentSuffix,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sParentInitWC.Set(V.ODBC.Con!rstSel.FieldValTrim!PART)
F.Intrinsic.Control.EndIf
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT * FROM GCG_3144_WIP_OP_LABL WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRW("rstSel",V.global.sSQL)
F.ODBC.Con!rstSel.AddNew
F.ODBC.Con!rstSel.Set!TRMNL(V.Caller.Terminal)
F.ODBC.Con!rstSel.Set!JOB(V.global.sJob)
F.ODBC.Con!rstSel.Set!SUFFIX(V.global.sSuffix)
F.ODBC.Con!rstSel.Set!CUR_SEQ(V.global.sSeq)
F.ODBC.Con!rstSel.Set!CUR_PART(V.Local.sCurPart)
F.ODBC.Con!rstSel.Set!CUR_DESCR(V.Local.sCurDescr)
F.ODBC.Con!rstSel.Set!LMO(V.Local.sLMO)
F.ODBC.Con!rstSel.Set!QTY(V.global.sQty)
F.ODBC.Con!rstSel.Set!WORKCENTER(V.Local.sWC)
F.ODBC.Con!rstSel.Set!EMPLOYEE(V.Local.sEmployee)
F.ODBC.Con!rstSel.Set!QUALITY_NO(V.Local.sQualitynbr)
F.ODBC.Con!rstSel.Set!SCRAP_CODE(V.Local.sScrapCode)
F.ODBC.Con!rstSel.Set!SCRAP_CODE_DESC(V.Local.sScrapDescription)
F.ODBC.Con!rstSel.Set!SCRAP_QTY(V.Local.sScrapqty)
F.ODBC.Con!rstSel.Set!CLOSE_FLAG(V.Local.sCloseflag)
F.ODBC.Con!rstSel.Set!PART(V.Local.sPart)
F.ODBC.Con!rstSel.Set!CUSTOMER(V.Local.sCust)
F.ODBC.Con!rstSel.Set!NAME(V.Local.sName)
F.ODBC.Con!rstSel.Set!NEXT_SEQ(V.Local.sNextSeq)
F.ODBC.Con!rstSel.Set!NEXT_PART(V.Local.sNextPart)
F.ODBC.Con!rstSel.Set!NEXT_DESCR(V.Local.sNextDescr)
F.ODBC.Con!rstSel.Set!Parent_Job(V.Local.sParentJob)
F.ODBC.Con!rstSel.Set!Parent_Suffix(V.Local.sParentSuffix)
F.ODBC.Con!rstSel.Set!Parent_Part(V.Local.sParentPart)
F.ODBC.Con!rstSel.Set!Parent_Descr(V.Local.sParentDescr)
F.ODBC.Con!rstSel.Set!Top_Parent_Job(V.Local.sTopParentJob)
F.ODBC.Con!rstSel.Set!Top_Parent_Suffix(V.Local.sTopParentSuffix)
F.ODBC.Con!rstSel.Set!Top_Parent_Part(V.Local.sTopParentPart)
F.ODBC.Con!rstSel.Set!Top_Parent_Descr(V.Local.sTopParentDescr)
F.ODBC.Con!rstSel.Set!QUALITY_NO(V.Local.sQualitynbr)
F.ODBC.Con!rstSel.Set!NEXT_SEQ_START(V.Local.dNext_DateStart.PervasiveDate)
F.ODBC.Con!rstSel.Set!NEXT_SEQ_DUE(V.Local.dNext_DateDue.PervasiveDate)
F.ODBC.Con!rstSel.Set!WO_PRIORITY(V.Local.sWOPriority)
F.ODBC.Con!rstSel.Set!PART_DESCR(V.Local.sPartDescr)
F.ODBC.Con!rstSel.Set!WO_QTY(V.Local.sWOQty)
F.ODBC.Con!rstSel.Set!WO_CUSTOMER_QTY(V.Local.sWOCustQty)
F.ODBC.Con!rstSel.Set!WO_DUE_DATE(V.Local.sWODateDue)
F.ODBC.Con!rstSel.Set!QTY_COMPLETED(V.Local.sQtyCompleted)
F.ODBC.Con!rstSel.Set!Parent_InitWC(V.Local.sParentInitWC)
F.ODBC.Con!rstSel.Set!Comments(V.Local.sComments)
F.ODBC.Con!rstSel.Update
F.ODBC.Con!rstSel.Close

F.Intrinsic.String.Build("SELECT PRINTER, SCRAPPRINTER FROM GCG_3144_MVE_TKT_SU WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.Global.sSQL)
F.Intrinsic.Control.If(V.ODBC.Con!rstSel.EOF,=,False)
	V.Local.sTPrinter.Set(V.ODBC.Con!rstSel.FieldValTrim!Printer)
	F.Intrinsic.Control.If(V.ODBC.Con!rstSel.FieldValTrim!ScrapPrinter,=,"")
		V.Local.sScrapPrinter.Set(V.Local.sTPrinter)
	F.Intrinsic.Control.Else
		V.Local.sScrapPrinter.Set(V.ODBC.Con!rstSel.FieldValTrim!ScrapPrinter)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

'BN, Aug 15, 2018
f.Intrinsic.Control.If(v.Caller.Hook,=,15850)
'Passing V.args.Copy to the Copies parameter of the RunReportPreProcessor does not work, so I worked around by using loop

	F.Intrinsic.String.Build("{0}\Custom\SF_WorkOrd_Lbl_100057_V1.rpt",V.Caller.BusintDir,V.Local.sRptLoc)
	F.Global.BI.InitializeReport("SF_WorkOrd_Lbl_100057_V1",V.Local.sRptLoc,V.Local.iRptID)

	'BN, Aug 22, 2018 => will print for whatever quantities, they don't care about quantities => so I commented out the If(V.global.sQty,<>,".000000") condition
	f.Global.BI.GetRunID(v.Global.iBIRunID)
	f.Global.BI.StartLogging(v.Global.iBIRunID,v.Local.iRptID,0,"",v.Global.iLogID)
	V.Local.sScrapflag.Set("N")
	v.Local.sParams.Set("TRMNL*!*Job*!*Suffix*!*Scrapflag")
	F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}",V.Caller.Terminal,V.Global.sJob,V.Global.sSuffix,V.Local.sScrapflag,V.Local.sValues)
	f.Global.BI.StopLogging(v.Global.iLogID)
	
	f.Intrinsic.Control.For(v.Local.iRunCopy,1,v.Args.CopyNum,1)
		'Use this function below (do not use F.Global.BI.PrintReport in this section)
		f.Global.BI.RunReportPreProcessor(v.Global.iBIRunID,v.Global.iLogID,v.Local.sParams,v.Local.sValues,v.Local.iRptID,8,False,"",1,v.Local.sTPrinter,-1,"","",v.Local.iRet)
	
	f.Intrinsic.Control.Next(v.Local.iRunCopy)	
f.Intrinsic.Control.EndIf	

F.ODBC.Con!rstSel.Close

'***********************************************************
'BN, Aug 22, 2018, only print scrap for the hook 15881
'***********************************************************
F.Intrinsic.Control.If(v.Caller.Hook,=,15881,and,V.Local.sscrapqty.Float,>,0)

	V.Local.sScrapflag.Set("Y")
	'Scrap - loop through scrap_data table by scrap_ref = sscrapref
	F.Intrinsic.String.Build("SELECT SCRAP_REF, QUALITY, REASON_CODE, QTY FROM SCRAP_DATA WHERE SCRAP_REF = '{0}' ",V.Local.sScrapRef,V.Global.sSQL)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstSel",V.global.sSQL)

	Function.Intrinsic.Control.DoUntil(V.odbc.Con!rstSel.eof,=,True)

		V.Local.sQualitynbr.Set(V.ODBC.Con!rstSel.FieldValTrim!Quality)
		V.Local.sScrapQty.Set(V.ODBC.Con!rstSel.FieldValTrim!QTY)
		V.Local.sScrapCode.Set(V.ODBC.Con!rstSel.FieldValTrim!Reason_Code)

		F.Intrinsic.String.Build("SELECT SCRAP_CODE_DESC FROM V_RJCT_SCRP_CODES WHERE SCRAP_CODE = '{0}' ",V.Local.sScrapCode,V.Global.sSQL)
		F.ODBC.Connection!Con.OpenRecordsetRO("rstSelA",V.global.sSQL)
		F.Intrinsic.Control.If(V.ODBC.Con!rstSelA.EOF,=,False)
			V.Local.sScrapDescription.Set(V.ODBC.Con!rstSelA.FieldValTrim!SCRAP_CODE_DESC)
		F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstSelA.Close

		F.Intrinsic.String.Build("SELECT * FROM GCG_3144_WIP_OP_LABL WHERE TRMNL = '{0}' ",V.Caller.Terminal,V.Global.sSQL)
		F.ODBC.Connection!Con.OpenRecordsetRW("rstSelB",V.global.sSQL)

		F.ODBC.Con!rstSelB.Set!QUALITY_NO(V.Local.sQualitynbr)
		F.ODBC.Con!rstSelB.Set!SCRAP_CODE(V.Local.sScrapCode)
		F.ODBC.Con!rstSelB.Set!SCRAP_CODE_DESC(V.Local.sScrapDescription)
		F.ODBC.Con!rstSelB.Set!SCRAP_QTY(V.Local.sscrapqty)
		F.ODBC.Con!rstSelB.Update
		F.ODBC.Con!rstSelB.Close
		
		'Initialize report
		F.Intrinsic.String.Build("{0}\Custom\GCG_3144_WIP_Operation_Label.rpt",V.Caller.BusintDir,V.Local.sRptLoc)
		F.Global.BI.InitializeReport("GCG_3144_WIP_Operation_Label",V.Local.sRptLoc,V.Local.iRptID)
		'Log Report
		f.Global.BI.GetRunID(v.Global.iBIRunID)
		f.Global.BI.StartLogging(v.Global.iBIRunID,v.Local.iRptID,0,"",v.Global.iLogID)

		v.Local.sParams.Set("TRMNL*!*Job*!*Suffix*!*Scrapflag")
		F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}",V.Caller.Terminal,V.Global.sJob,V.Global.sSuffix,V.Local.sScrapflag,V.Local.sValues)
		f.Global.BI.StopLogging(v.Global.iLogID)
		
		'Print report
		'Should not use this function because it will do asyncronously which cause the mismatch of order of scrap codes
		'f.Global.BI.RunReportPreProcessor(v.Global.iBIRunID,v.Global.iLogID,v.Local.sParams,v.Local.sValues,v.Local.iRptID,8,False,"",1,v.Local.sScrapPrinter,-1,"","",v.Local.iRet)
		
		'Should use this function to print syncronously
		f.Intrinsic.String.Split(v.Local.sParams,"*!*",v.Local.sParams)
		f.Intrinsic.String.Split(v.Local.sValues,"*!*",v.Local.sValues)
		F.Global.BI.PrintReport(v.Local.iRptID,3,v.Local.sParams,v.Local.sValues,v.Local.sScrapPrinter,True)

		F.ODBC.con!rstSel.MoveNext
	Function.Intrinsic.Control.Loop
	F.ODBC.Con!rstSel.Close

F.Intrinsic.Control.Endif

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("PrintTicket_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_3144_Print_Report_WIP_Operation_Label.gas",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Unload)
Function.Intrinsic.Control.EndIf


Program.Sub.PrintTicket.End



